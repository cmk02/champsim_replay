name: Run Tests

on:
  push:
    paths-ignore:
      - '.gitignore'
      - '*.md'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/test.yml'

  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '.gitignore'
      - '*.md'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/test.yml'

jobs:
  internal:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        # GCC-9
        - {
            name: "Ubuntu 20.04 GCC 9",
            os: ubuntu-20.04,
            cxx: "g++-9",
          }
        - {
            name: "Ubuntu 22.04 GCC 9",
            os: ubuntu-22.04,
            cxx: "g++-9",
          }

        # GCC-10
        - {
            name: "Ubuntu 20.04 GCC 10",
            os: ubuntu-20.04,
            cxx: "g++-10",
          }
        - {
            name: "Ubuntu 22.04 GCC 10",
            os: ubuntu-22.04,
            cxx: "g++-10",
          }

        # GCC-11
        - {
            name: "Ubuntu 22.04 GCC 11",
            os: ubuntu-22.04,
            cxx: "g++-11",
          }

        # Clang-10
        - {
            name: "Ubuntu 20.04 Clang 10",
            os: ubuntu-20.04,
            cxx: "clang++-10",
          }

        # Clang-11
        - {
            name: "Ubuntu 20.04 Clang 11",
            os: ubuntu-20.04,
            cxx: "clang++-11",
          }

        # Clang-12
        - {
            name: "Ubuntu 20.04 Clang 12",
            os: ubuntu-20.04,
            cxx: "clang++-12",
          }
        - {
            name: "Ubuntu 22.04 Clang 12",
            os: ubuntu-22.04,
            cxx: "clang++-12",
          }

        # Clang-13
        - {
            name: "Ubuntu 22.04 Clang 13",
            os: ubuntu-22.04,
            cxx: "clang++-13",
          }

        # Clang-14
        - {
            name: "Ubuntu 22.04 Clang 14",
            os: ubuntu-22.04,
            cxx: "clang++-14",
          }

        # AppleClang
        - {
            name: "macOS Clang",
            os: macos-latest,
            cxx: "clang++",
          }

        # MSVC 2022
        #- {
        #name: "Windows MSVC 2022",
        #os: windows-latest,
        #cxx: "cl",
        #environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
        #}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set up pkg-config
      if: startsWith(matrix.config.os, 'macos')
      run: brew install pkg-config
      
    - name: Set up vcpkg
      run: |
        vcpkg/bootstrap-vcpkg.sh
        vcpkg/vcpkg install

    - name: Configure
      run: ./config.sh

    - name: Make
      run: make $(pwd)/test/bin/000-test-main
      env:
        CXX: ${{ matrix.config.cxx }}

    - name: Run
      run: test/bin/000-test-main

  output:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set up
      run: |
        vcpkg/bootstrap-vcpkg.sh
        vcpkg/vcpkg install

    - name: Configure
      run: ./config.sh

    - name: Make
      run: make

    - name: Produce JSON
      run: ./bin/champsim -w5000 -i5000 --json=test.json -- https://dpc3.compas.cs.stonybrook.edu/champsim-traces/speccpu/400.perlbench-41B.champsimtrace.xz

    - name: Validate JSON
      run: python3 -m json.tool test.json

  coveralls:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set up
      run: |
        vcpkg/bootstrap-vcpkg.sh
        vcpkg/vcpkg install
        sudo apt-get install lcov

    - name: Configure
      run: ./config.sh

    - name: Make
      run: make $(pwd)/test/bin/000-test-main
      env:
        CXXFLAGS: '--coverage'
        LDFLAGS: '--coverage'

    - name: Run
      run: test/bin/000-test-main

    - name: Capture LCOV
      run: |
        lcov --zerocounters --directory .
        lcov --capture --no-external --directory . --output-file lcov.info
        lcov --remove lcov.info .csconfig/\* --directory . --output-file lcov.info
        lcov --remove lcov.info test/\* --directory . --output-file lcov.info
        lcov --remove lcov.info tracer/\* --directory . --output-file lcov.info
        lcov --remove lcov.info vpkg_installed/\* --directory . --output-file lcov.info
        lcov --list lcov.info  

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.info
